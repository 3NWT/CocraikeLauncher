/****************************************************************************
** Meta object code from reading C++ file 'PackageManifest_test.cpp'
**
** Created by: The Qt Meta Object Compiler version 68 (Qt 6.6.0)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qmetatype.h>

#if __has_include(<QtCore/qtmochelpers.h>)
#include <QtCore/qtmochelpers.h>
#else
QT_BEGIN_MOC_NAMESPACE
#endif


#include <memory>

#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'PackageManifest_test.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 68
#error "This file was generated using the moc from 6.6.0. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

#ifndef Q_CONSTINIT
#define Q_CONSTINIT
#endif

QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
QT_WARNING_DISABLE_GCC("-Wuseless-cast")
namespace {

#ifdef QT_MOC_HAS_STRINGDATA
struct qt_meta_stringdata_CLASSPackageManifestTestENDCLASS_t {};
static constexpr auto qt_meta_stringdata_CLASSPackageManifestTestENDCLASS = QtMocHelpers::stringData(
    "PackageManifestTest",
    "test_parse",
    "",
    "test_parse_file",
    "test_inspect",
    "test_inspect_symlinks",
    "mkdir_deep",
    "rmdir_deep",
    "identical_file",
    "changed_file",
    "added_file",
    "removed_file"
);
#else  // !QT_MOC_HAS_STRING_DATA
struct qt_meta_stringdata_CLASSPackageManifestTestENDCLASS_t {
    uint offsetsAndSizes[24];
    char stringdata0[20];
    char stringdata1[11];
    char stringdata2[1];
    char stringdata3[16];
    char stringdata4[13];
    char stringdata5[22];
    char stringdata6[11];
    char stringdata7[11];
    char stringdata8[15];
    char stringdata9[13];
    char stringdata10[11];
    char stringdata11[13];
};
#define QT_MOC_LITERAL(ofs, len) \
    uint(sizeof(qt_meta_stringdata_CLASSPackageManifestTestENDCLASS_t::offsetsAndSizes) + ofs), len 
Q_CONSTINIT static const qt_meta_stringdata_CLASSPackageManifestTestENDCLASS_t qt_meta_stringdata_CLASSPackageManifestTestENDCLASS = {
    {
        QT_MOC_LITERAL(0, 19),  // "PackageManifestTest"
        QT_MOC_LITERAL(20, 10),  // "test_parse"
        QT_MOC_LITERAL(31, 0),  // ""
        QT_MOC_LITERAL(32, 15),  // "test_parse_file"
        QT_MOC_LITERAL(48, 12),  // "test_inspect"
        QT_MOC_LITERAL(61, 21),  // "test_inspect_symlinks"
        QT_MOC_LITERAL(83, 10),  // "mkdir_deep"
        QT_MOC_LITERAL(94, 10),  // "rmdir_deep"
        QT_MOC_LITERAL(105, 14),  // "identical_file"
        QT_MOC_LITERAL(120, 12),  // "changed_file"
        QT_MOC_LITERAL(133, 10),  // "added_file"
        QT_MOC_LITERAL(144, 12)   // "removed_file"
    },
    "PackageManifestTest",
    "test_parse",
    "",
    "test_parse_file",
    "test_inspect",
    "test_inspect_symlinks",
    "mkdir_deep",
    "rmdir_deep",
    "identical_file",
    "changed_file",
    "added_file",
    "removed_file"
};
#undef QT_MOC_LITERAL
#endif // !QT_MOC_HAS_STRING_DATA
} // unnamed namespace

Q_CONSTINIT static const uint qt_meta_data_CLASSPackageManifestTestENDCLASS[] = {

 // content:
      12,       // revision
       0,       // classname
       0,    0, // classinfo
      10,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags, initial metatype offsets
       1,    0,   74,    2, 0x08,    1 /* Private */,
       3,    0,   75,    2, 0x08,    2 /* Private */,
       4,    0,   76,    2, 0x08,    3 /* Private */,
       5,    0,   77,    2, 0x08,    4 /* Private */,
       6,    0,   78,    2, 0x08,    5 /* Private */,
       7,    0,   79,    2, 0x08,    6 /* Private */,
       8,    0,   80,    2, 0x08,    7 /* Private */,
       9,    0,   81,    2, 0x08,    8 /* Private */,
      10,    0,   82,    2, 0x08,    9 /* Private */,
      11,    0,   83,    2, 0x08,   10 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

Q_CONSTINIT const QMetaObject PackageManifestTest::staticMetaObject = { {
    QMetaObject::SuperData::link<QObject::staticMetaObject>(),
    qt_meta_stringdata_CLASSPackageManifestTestENDCLASS.offsetsAndSizes,
    qt_meta_data_CLASSPackageManifestTestENDCLASS,
    qt_static_metacall,
    nullptr,
    qt_incomplete_metaTypeArray<qt_meta_stringdata_CLASSPackageManifestTestENDCLASS_t,
        // Q_OBJECT / Q_GADGET
        QtPrivate::TypeAndForceComplete<PackageManifestTest, std::true_type>,
        // method 'test_parse'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'test_parse_file'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'test_inspect'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'test_inspect_symlinks'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'mkdir_deep'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'rmdir_deep'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'identical_file'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'changed_file'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'added_file'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'removed_file'
        QtPrivate::TypeAndForceComplete<void, std::false_type>
    >,
    nullptr
} };

void PackageManifestTest::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<PackageManifestTest *>(_o);
        (void)_t;
        switch (_id) {
        case 0: _t->test_parse(); break;
        case 1: _t->test_parse_file(); break;
        case 2: _t->test_inspect(); break;
        case 3: _t->test_inspect_symlinks(); break;
        case 4: _t->mkdir_deep(); break;
        case 5: _t->rmdir_deep(); break;
        case 6: _t->identical_file(); break;
        case 7: _t->changed_file(); break;
        case 8: _t->added_file(); break;
        case 9: _t->removed_file(); break;
        default: ;
        }
    }
    (void)_a;
}

const QMetaObject *PackageManifestTest::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *PackageManifestTest::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_CLASSPackageManifestTestENDCLASS.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int PackageManifestTest::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 10)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 10;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 10)
            *reinterpret_cast<QMetaType *>(_a[0]) = QMetaType();
        _id -= 10;
    }
    return _id;
}
QT_WARNING_POP
