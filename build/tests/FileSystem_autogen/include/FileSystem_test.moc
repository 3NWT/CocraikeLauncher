/****************************************************************************
** Meta object code from reading C++ file 'FileSystem_test.cpp'
**
** Created by: The Qt Meta Object Compiler version 68 (Qt 6.6.0)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qmetatype.h>

#if __has_include(<QtCore/qtmochelpers.h>)
#include <QtCore/qtmochelpers.h>
#else
QT_BEGIN_MOC_NAMESPACE
#endif


#include <memory>

#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'FileSystem_test.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 68
#error "This file was generated using the moc from 6.6.0. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

#ifndef Q_CONSTINIT
#define Q_CONSTINIT
#endif

QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
QT_WARNING_DISABLE_GCC("-Wuseless-cast")
namespace {

#ifdef QT_MOC_HAS_STRINGDATA
struct qt_meta_stringdata_CLASSFileSystemTestENDCLASS_t {};
static constexpr auto qt_meta_stringdata_CLASSFileSystemTestENDCLASS = QtMocHelpers::stringData(
    "FileSystemTest",
    "test_pathCombine",
    "",
    "test_PathCombine1_data",
    "test_PathCombine1",
    "test_PathCombine2_data",
    "test_PathCombine2",
    "test_copy",
    "test_copy_with_blacklist",
    "test_copy_with_whitelist",
    "test_copy_with_dot_hidden",
    "test_copy_single_file",
    "test_getDesktop"
);
#else  // !QT_MOC_HAS_STRING_DATA
struct qt_meta_stringdata_CLASSFileSystemTestENDCLASS_t {
    uint offsetsAndSizes[26];
    char stringdata0[15];
    char stringdata1[17];
    char stringdata2[1];
    char stringdata3[23];
    char stringdata4[18];
    char stringdata5[23];
    char stringdata6[18];
    char stringdata7[10];
    char stringdata8[25];
    char stringdata9[25];
    char stringdata10[26];
    char stringdata11[22];
    char stringdata12[16];
};
#define QT_MOC_LITERAL(ofs, len) \
    uint(sizeof(qt_meta_stringdata_CLASSFileSystemTestENDCLASS_t::offsetsAndSizes) + ofs), len 
Q_CONSTINIT static const qt_meta_stringdata_CLASSFileSystemTestENDCLASS_t qt_meta_stringdata_CLASSFileSystemTestENDCLASS = {
    {
        QT_MOC_LITERAL(0, 14),  // "FileSystemTest"
        QT_MOC_LITERAL(15, 16),  // "test_pathCombine"
        QT_MOC_LITERAL(32, 0),  // ""
        QT_MOC_LITERAL(33, 22),  // "test_PathCombine1_data"
        QT_MOC_LITERAL(56, 17),  // "test_PathCombine1"
        QT_MOC_LITERAL(74, 22),  // "test_PathCombine2_data"
        QT_MOC_LITERAL(97, 17),  // "test_PathCombine2"
        QT_MOC_LITERAL(115, 9),  // "test_copy"
        QT_MOC_LITERAL(125, 24),  // "test_copy_with_blacklist"
        QT_MOC_LITERAL(150, 24),  // "test_copy_with_whitelist"
        QT_MOC_LITERAL(175, 25),  // "test_copy_with_dot_hidden"
        QT_MOC_LITERAL(201, 21),  // "test_copy_single_file"
        QT_MOC_LITERAL(223, 15)   // "test_getDesktop"
    },
    "FileSystemTest",
    "test_pathCombine",
    "",
    "test_PathCombine1_data",
    "test_PathCombine1",
    "test_PathCombine2_data",
    "test_PathCombine2",
    "test_copy",
    "test_copy_with_blacklist",
    "test_copy_with_whitelist",
    "test_copy_with_dot_hidden",
    "test_copy_single_file",
    "test_getDesktop"
};
#undef QT_MOC_LITERAL
#endif // !QT_MOC_HAS_STRING_DATA
} // unnamed namespace

Q_CONSTINIT static const uint qt_meta_data_CLASSFileSystemTestENDCLASS[] = {

 // content:
      12,       // revision
       0,       // classname
       0,    0, // classinfo
      11,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags, initial metatype offsets
       1,    0,   80,    2, 0x08,    1 /* Private */,
       3,    0,   81,    2, 0x08,    2 /* Private */,
       4,    0,   82,    2, 0x08,    3 /* Private */,
       5,    0,   83,    2, 0x08,    4 /* Private */,
       6,    0,   84,    2, 0x08,    5 /* Private */,
       7,    0,   85,    2, 0x08,    6 /* Private */,
       8,    0,   86,    2, 0x08,    7 /* Private */,
       9,    0,   87,    2, 0x08,    8 /* Private */,
      10,    0,   88,    2, 0x08,    9 /* Private */,
      11,    0,   89,    2, 0x08,   10 /* Private */,
      12,    0,   90,    2, 0x08,   11 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

Q_CONSTINIT const QMetaObject FileSystemTest::staticMetaObject = { {
    QMetaObject::SuperData::link<QObject::staticMetaObject>(),
    qt_meta_stringdata_CLASSFileSystemTestENDCLASS.offsetsAndSizes,
    qt_meta_data_CLASSFileSystemTestENDCLASS,
    qt_static_metacall,
    nullptr,
    qt_incomplete_metaTypeArray<qt_meta_stringdata_CLASSFileSystemTestENDCLASS_t,
        // Q_OBJECT / Q_GADGET
        QtPrivate::TypeAndForceComplete<FileSystemTest, std::true_type>,
        // method 'test_pathCombine'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'test_PathCombine1_data'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'test_PathCombine1'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'test_PathCombine2_data'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'test_PathCombine2'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'test_copy'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'test_copy_with_blacklist'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'test_copy_with_whitelist'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'test_copy_with_dot_hidden'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'test_copy_single_file'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'test_getDesktop'
        QtPrivate::TypeAndForceComplete<void, std::false_type>
    >,
    nullptr
} };

void FileSystemTest::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<FileSystemTest *>(_o);
        (void)_t;
        switch (_id) {
        case 0: _t->test_pathCombine(); break;
        case 1: _t->test_PathCombine1_data(); break;
        case 2: _t->test_PathCombine1(); break;
        case 3: _t->test_PathCombine2_data(); break;
        case 4: _t->test_PathCombine2(); break;
        case 5: _t->test_copy(); break;
        case 6: _t->test_copy_with_blacklist(); break;
        case 7: _t->test_copy_with_whitelist(); break;
        case 8: _t->test_copy_with_dot_hidden(); break;
        case 9: _t->test_copy_single_file(); break;
        case 10: _t->test_getDesktop(); break;
        default: ;
        }
    }
    (void)_a;
}

const QMetaObject *FileSystemTest::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *FileSystemTest::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_CLASSFileSystemTestENDCLASS.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int FileSystemTest::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 11)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 11;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 11)
            *reinterpret_cast<QMetaType *>(_a[0]) = QMetaType();
        _id -= 11;
    }
    return _id;
}
QT_WARNING_POP
